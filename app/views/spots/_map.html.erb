<div id='map'></div>

<script>
  var map;
  var makerBeer;
  var makerCoffee;
  var makerParking;
  var makerPlace;
  var coffee_image = "/images/coffee.png";
  var beer_image = "/images/beer2.png";
  var ramen_image = "/images/ramen.png";
  var parking_image = "/images/parking.png";
  var livehouse_image = "/images/livehouse.png";
  var place_image = "/images/place.png";
  function initMap(){
    map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: 35.6628611, lng: 139.6972762},
      zoom: 15,
      mapTypeControl: false,
      streetViewControl: false,
      gestureHandling: 'cooperative',
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      styles: [
  {
    "featureType": "poi.business",
    "stylers": [
      {
        "visibility": "off"
      }
    ]
  },
  {
    "featureType": "poi.school",
    "stylers": [
      {
        "visibility": "off"
      }
    ]
  },
  {
    "featureType": "poi.school",
    "elementType": "labels.text",
    "stylers": [
      {
        "visibility": "off"
      }
    ]
  }
]
  });

    // クリックイベントを追加
    map.addListener('click', function(e) {
      // クリック地点にピンを描画
      getClickLatLng(e.latLng, map);
      // 逆ジオコーディング
      reverse(e.latLng);
    });
     
    // デフォルトの情報ウィンドウを非表示に
    // 特定のウィンドウを表示させるには noSuppress = true をオプションで指定
    var set;
    (function fixInfoWindow() {
        set = google.maps.InfoWindow.prototype.set;
        google.maps.InfoWindow.prototype.set = function(key, val) {
            if (key === "map") {
                if (! this.get("noSuppress")) {
                    return;
                }
            }
            set.apply(this, arguments);
        }
    })();
    
    // ラーメン屋
    // eachの中で変数を変更するため、indexを付与
    // each_with_indexを使うと、0,1,2~と付与される
    var makerRamen = []
    var infoWindow = []
    <% ramens.each_with_index do |ramen,index| %>
        makerRamen[<%= index %>] = new google.maps.Marker({
        map: map,
        icon: ramen_image,
        position: new google.maps.LatLng(
          <%= ramen.latitude %>, //latitude
          <%= ramen.longitude %>  //longitude
        )
        });

        infoWindow[<%= index %>] = new google.maps.InfoWindow({
        // ウィンドウを表示させる
        noSuppress:true,
        content: <%== "'#{ramen.spot_name}'" %>
        }); 
        
        //情報ウインドウのオープンをマーカーのクリックイベントに登録
        makerRamen[<%= index %>].addListener('click', function(){
          infoWindow.forEach((value) => {
          value.close()
          });
          infoWindow[<%= index %>].open(map, makerRamen[<%= index %>])
          $('#spot-name').val(<%== "'#{ramen.spot_name}'" %>);
        })
        
    <% end %>

    // 居酒屋
    <% beers.each do |beer| %>
      makerBeer = new google.maps.Marker({
        map: map,
        icon: beer_image,
        position: new google.maps.LatLng(
          <%= beer.latitude %>, //latitude
          <%= beer.longitude %>  //longitude
        )
      });
    <% end %>

    // 喫茶店
    <% coffees.each do |coffee| %>
      makerCoffee = new google.maps.Marker({
        map: map,
        icon: coffee_image,
        position: new google.maps.LatLng(
          <%= coffee.latitude %>, //latitude
          <%= coffee.longitude %>  //longitude
        )
      });
    <% end %>

    // 駐車場
    <% parkings.each do |parking| %>
      makerParking = new google.maps.Marker({
        map: map,
        icon: parking_image,
        position: new google.maps.LatLng(
          <%= parking.latitude %>, //latitude
          <%= parking.longitude %>  //longitude
        )
      });
    <% end %>

    // その他
    <% places.each do |place| %>
      makerPlace = new google.maps.Marker({
        map: map,
        icon: place_image,
        position: new google.maps.LatLng(
          <%= place.latitude %>, //latitude
          <%= place.longitude %>  //longitude
        )
      });
    <% end %>

    // ライブハウス
    <% livehouses.each do |livehouse| %>
      makerLivehouse = new google.maps.Marker({
        map: map,
        icon: livehouse_image,
        position: new google.maps.LatLng(
          <%= livehouse.latitude %>, //latitude
          <%= livehouse.longitude %>  //longitude
        )
      });
    <% end %>

    // クリック地点にピンを描画 　　
    var marker;
    function getClickLatLng(lat_lng, map) {
      
      //すでにピンが描画済みの場合、それを削除 
      if(marker){
        marker.setMap(null);
      }
      
      // 座標をフォームに表示
      $('#lat').val(lat_lng.lat());
      $('#lng').val(lat_lng.lng());
    
    　// マーカーを設置
      marker = new google.maps.Marker({
      position: lat_lng,
      map: map,
      });

      // 座標の中心をずらす
      // Map.panTo()はMapクラスのメソッドです。地図の位置座標を絶対的に移動できます。
      // map.panTo(lat_lng);

    }

    // 逆ジオコーディング
    var latlng;
    var geocoder;
    var address;
    function reverse(lat_lng){
      latlng = {lat: lat_lng.lat(), lng: lat_lng.lng()};
      geocoder = new google.maps.Geocoder();
      geocoder.geocode({
        latLng: latlng
      }, 
        function(results, status){
          if (status == google.maps.GeocoderStatus.OK && results[0].geometry) {
            address = results[0].formatted_address;
            $('#address_field').val(address);
          }
        }
      )
    }
  }
  </script>

 <%# application.html.erbに記述すると、redirect時などに表示されなくなる %>
  <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBucemSsqWHgDVSWR5MJG9kEh2Zvl2yOWw&callback=initMap">
  </script>